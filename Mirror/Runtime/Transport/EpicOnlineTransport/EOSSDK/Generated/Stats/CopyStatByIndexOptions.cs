// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Stats
{
	/// <summary>
	/// Input parameters for the <see cref="StatsInterface.CopyStatByIndex" /> function.
	/// </summary>
	public struct CopyStatByIndexOptions
	{
		/// <summary>
		/// The Product User ID of the user who owns the stat
		/// </summary>
		public ProductUserId TargetUserId { get; set; }

		/// <summary>
		/// Index of the stat to retrieve from the cache
		/// </summary>
		public uint StatIndex { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct CopyStatByIndexOptionsInternal : ISettable<CopyStatByIndexOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_TargetUserId;
		private uint m_StatIndex;

		public ProductUserId TargetUserId
		{
			set
			{
				Helper.Set(value, ref m_TargetUserId);
			}
		}

		public uint StatIndex
		{
			set
			{
				m_StatIndex = value;
			}
		}

		public void Set(ref CopyStatByIndexOptions other)
		{
			m_ApiVersion = StatsInterface.CopystatbyindexApiLatest;
			TargetUserId = other.TargetUserId;
			StatIndex = other.StatIndex;
		}

		public void Set(ref CopyStatByIndexOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = StatsInterface.CopystatbyindexApiLatest;
				TargetUserId = other.Value.TargetUserId;
				StatIndex = other.Value.StatIndex;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_TargetUserId);
		}
	}
}