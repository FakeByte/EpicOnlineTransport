// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Stats
{
	/// <summary>
	/// Input parameters for the <see cref="StatsInterface.CopyStatByName" /> function.
	/// </summary>
	public struct CopyStatByNameOptions
	{
		/// <summary>
		/// The Product User ID of the user who owns the stat
		/// </summary>
		public ProductUserId TargetUserId { get; set; }

		/// <summary>
		/// Name of the stat to retrieve from the cache
		/// </summary>
		public Utf8String Name { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct CopyStatByNameOptionsInternal : ISettable<CopyStatByNameOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_TargetUserId;
		private System.IntPtr m_Name;

		public ProductUserId TargetUserId
		{
			set
			{
				Helper.Set(value, ref m_TargetUserId);
			}
		}

		public Utf8String Name
		{
			set
			{
				Helper.Set(value, ref m_Name);
			}
		}

		public void Set(ref CopyStatByNameOptions other)
		{
			m_ApiVersion = StatsInterface.CopystatbynameApiLatest;
			TargetUserId = other.TargetUserId;
			Name = other.Name;
		}

		public void Set(ref CopyStatByNameOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = StatsInterface.CopystatbynameApiLatest;
				TargetUserId = other.Value.TargetUserId;
				Name = other.Value.Name;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_TargetUserId);
			Helper.Dispose(ref m_Name);
		}
	}
}