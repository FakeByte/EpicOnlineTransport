// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.CustomInvites
{
	/// <summary>
	/// Input parameters for the <see cref="CustomInvitesInterface.SendCustomInvite" /> function.
	/// </summary>
	public struct SendCustomInviteOptions
	{
		/// <summary>
		/// Local user sending a CustomInvite
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// Users to whom the invites should be sent
		/// </summary>
		public ProductUserId[] TargetUserIds { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct SendCustomInviteOptionsInternal : ISettable<SendCustomInviteOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_LocalUserId;
		private System.IntPtr m_TargetUserIds;
		private uint m_TargetUserIdsCount;

		public ProductUserId LocalUserId
		{
			set
			{
				Helper.Set(value, ref m_LocalUserId);
			}
		}

		public ProductUserId[] TargetUserIds
		{
			set
			{
				Helper.Set(value, ref m_TargetUserIds, out m_TargetUserIdsCount);
			}
		}

		public void Set(ref SendCustomInviteOptions other)
		{
			m_ApiVersion = CustomInvitesInterface.SendcustominviteApiLatest;
			LocalUserId = other.LocalUserId;
			TargetUserIds = other.TargetUserIds;
		}

		public void Set(ref SendCustomInviteOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = CustomInvitesInterface.SendcustominviteApiLatest;
				LocalUserId = other.Value.LocalUserId;
				TargetUserIds = other.Value.TargetUserIds;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_TargetUserIds);
		}
	}
}