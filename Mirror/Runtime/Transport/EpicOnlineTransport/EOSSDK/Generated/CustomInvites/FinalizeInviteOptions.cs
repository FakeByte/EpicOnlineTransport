// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.CustomInvites
{
	public struct FinalizeInviteOptions
	{
		/// <summary>
		/// User that sent the custom invite
		/// </summary>
		public ProductUserId TargetUserId { get; set; }

		/// <summary>
		/// Recipient Local user id
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// Id of the Custom Invite accepted
		/// </summary>
		public Utf8String CustomInviteId { get; set; }

		/// <summary>
		/// Result of the Processing operation, transmitted to Social Overlay if applicable
		/// </summary>
		public Result ProcessingResult { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct FinalizeInviteOptionsInternal : ISettable<FinalizeInviteOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_TargetUserId;
		private System.IntPtr m_LocalUserId;
		private System.IntPtr m_CustomInviteId;
		private Result m_ProcessingResult;

		public ProductUserId TargetUserId
		{
			set
			{
				Helper.Set(value, ref m_TargetUserId);
			}
		}

		public ProductUserId LocalUserId
		{
			set
			{
				Helper.Set(value, ref m_LocalUserId);
			}
		}

		public Utf8String CustomInviteId
		{
			set
			{
				Helper.Set(value, ref m_CustomInviteId);
			}
		}

		public Result ProcessingResult
		{
			set
			{
				m_ProcessingResult = value;
			}
		}

		public void Set(ref FinalizeInviteOptions other)
		{
			m_ApiVersion = CustomInvitesInterface.FinalizeinviteApiLatest;
			TargetUserId = other.TargetUserId;
			LocalUserId = other.LocalUserId;
			CustomInviteId = other.CustomInviteId;
			ProcessingResult = other.ProcessingResult;
		}

		public void Set(ref FinalizeInviteOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = CustomInvitesInterface.FinalizeinviteApiLatest;
				TargetUserId = other.Value.TargetUserId;
				LocalUserId = other.Value.LocalUserId;
				CustomInviteId = other.Value.CustomInviteId;
				ProcessingResult = other.Value.ProcessingResult;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_TargetUserId);
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_CustomInviteId);
		}
	}
}