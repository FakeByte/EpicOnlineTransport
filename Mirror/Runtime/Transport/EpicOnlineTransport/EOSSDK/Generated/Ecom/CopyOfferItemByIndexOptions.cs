// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Ecom
{
	/// <summary>
	/// Input parameters for the <see cref="EcomInterface.CopyOfferItemByIndex" /> function.
	/// </summary>
	public struct CopyOfferItemByIndexOptions
	{
		/// <summary>
		/// The Epic Account ID of the local user whose item is being copied
		/// </summary>
		public EpicAccountId LocalUserId { get; set; }

		/// <summary>
		/// The ID of the offer to get the items for.
		/// </summary>
		public Utf8String OfferId { get; set; }

		/// <summary>
		/// The index of the item to get.
		/// </summary>
		public uint ItemIndex { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct CopyOfferItemByIndexOptionsInternal : ISettable<CopyOfferItemByIndexOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_LocalUserId;
		private System.IntPtr m_OfferId;
		private uint m_ItemIndex;

		public EpicAccountId LocalUserId
		{
			set
			{
				Helper.Set(value, ref m_LocalUserId);
			}
		}

		public Utf8String OfferId
		{
			set
			{
				Helper.Set(value, ref m_OfferId);
			}
		}

		public uint ItemIndex
		{
			set
			{
				m_ItemIndex = value;
			}
		}

		public void Set(ref CopyOfferItemByIndexOptions other)
		{
			m_ApiVersion = EcomInterface.CopyofferitembyindexApiLatest;
			LocalUserId = other.LocalUserId;
			OfferId = other.OfferId;
			ItemIndex = other.ItemIndex;
		}

		public void Set(ref CopyOfferItemByIndexOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = EcomInterface.CopyofferitembyindexApiLatest;
				LocalUserId = other.Value.LocalUserId;
				OfferId = other.Value.OfferId;
				ItemIndex = other.Value.ItemIndex;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_OfferId);
		}
	}
}