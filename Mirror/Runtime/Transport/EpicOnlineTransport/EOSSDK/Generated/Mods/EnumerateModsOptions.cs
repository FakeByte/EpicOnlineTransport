// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Mods
{
	/// <summary>
	/// Input parameters for the <see cref="ModsInterface.EnumerateMods" /> Function.
	/// </summary>
	public struct EnumerateModsOptions
	{
		/// <summary>
		/// The Epic Account ID of the user for which the mod should be enumerated
		/// </summary>
		public EpicAccountId LocalUserId { get; set; }

		/// <summary>
		/// Type of the mods to enumerate
		/// </summary>
		public ModEnumerationType Type { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct EnumerateModsOptionsInternal : ISettable<EnumerateModsOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_LocalUserId;
		private ModEnumerationType m_Type;

		public EpicAccountId LocalUserId
		{
			set
			{
				Helper.Set(value, ref m_LocalUserId);
			}
		}

		public ModEnumerationType Type
		{
			set
			{
				m_Type = value;
			}
		}

		public void Set(ref EnumerateModsOptions other)
		{
			m_ApiVersion = ModsInterface.EnumeratemodsApiLatest;
			LocalUserId = other.LocalUserId;
			Type = other.Type;
		}

		public void Set(ref EnumerateModsOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = ModsInterface.EnumeratemodsApiLatest;
				LocalUserId = other.Value.LocalUserId;
				Type = other.Value.Type;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LocalUserId);
		}
	}
}