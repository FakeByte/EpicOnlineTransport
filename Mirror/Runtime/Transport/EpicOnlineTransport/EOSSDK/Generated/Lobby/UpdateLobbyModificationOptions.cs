// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Lobby
{
	/// <summary>
	/// Input parameters for the <see cref="LobbyInterface.UpdateLobbyModification" /> function.
	/// </summary>
	public struct UpdateLobbyModificationOptions
	{
		/// <summary>
		/// The ID of the local user making modifications. Must be the owner to modify lobby data, but any lobby member can modify their own attributes.
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// The ID of the lobby
		/// </summary>
		public Utf8String LobbyId { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct UpdateLobbyModificationOptionsInternal : ISettable<UpdateLobbyModificationOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_LocalUserId;
		private System.IntPtr m_LobbyId;

		public ProductUserId LocalUserId
		{
			set
			{
				Helper.Set(value, ref m_LocalUserId);
			}
		}

		public Utf8String LobbyId
		{
			set
			{
				Helper.Set(value, ref m_LobbyId);
			}
		}

		public void Set(ref UpdateLobbyModificationOptions other)
		{
			m_ApiVersion = LobbyInterface.UpdatelobbymodificationApiLatest;
			LocalUserId = other.LocalUserId;
			LobbyId = other.LobbyId;
		}

		public void Set(ref UpdateLobbyModificationOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = LobbyInterface.UpdatelobbymodificationApiLatest;
				LocalUserId = other.Value.LocalUserId;
				LobbyId = other.Value.LobbyId;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_LobbyId);
		}
	}
}