// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Sessions
{
	/// <summary>
	/// Input parameters for the <see cref="ActiveSession.GetRegisteredPlayerByIndex" /> function.
	/// </summary>
	public struct ActiveSessionGetRegisteredPlayerByIndexOptions
	{
		/// <summary>
		/// Index of the registered player to retrieve
		/// </summary>
		public uint PlayerIndex { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct ActiveSessionGetRegisteredPlayerByIndexOptionsInternal : ISettable<ActiveSessionGetRegisteredPlayerByIndexOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private uint m_PlayerIndex;

		public uint PlayerIndex
		{
			set
			{
				m_PlayerIndex = value;
			}
		}

		public void Set(ref ActiveSessionGetRegisteredPlayerByIndexOptions other)
		{
			m_ApiVersion = ActiveSession.ActivesessionGetregisteredplayerbyindexApiLatest;
			PlayerIndex = other.PlayerIndex;
		}

		public void Set(ref ActiveSessionGetRegisteredPlayerByIndexOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = ActiveSession.ActivesessionGetregisteredplayerbyindexApiLatest;
				PlayerIndex = other.Value.PlayerIndex;
			}
		}

		public void Dispose()
		{
		}
	}
}