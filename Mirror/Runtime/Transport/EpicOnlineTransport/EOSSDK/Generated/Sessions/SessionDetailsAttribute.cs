// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Sessions
{
	/// <summary>
	/// An attribution value and its advertisement setting stored with a session.
	/// </summary>
	public struct SessionDetailsAttribute
	{
		/// <summary>
		/// Key/Value pair describing the attribute
		/// </summary>
		public AttributeData? Data { get; set; }

		/// <summary>
		/// Is this attribution advertised with the backend or simply stored locally
		/// </summary>
		public SessionAttributeAdvertisementType AdvertisementType { get; set; }

		internal void Set(ref SessionDetailsAttributeInternal other)
		{
			Data = other.Data;
			AdvertisementType = other.AdvertisementType;
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct SessionDetailsAttributeInternal : IGettable<SessionDetailsAttribute>, ISettable<SessionDetailsAttribute>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_Data;
		private SessionAttributeAdvertisementType m_AdvertisementType;

		public AttributeData? Data
		{
			get
			{
				AttributeData? value;
				Helper.Get<AttributeDataInternal, AttributeData>(m_Data, out value);
				return value;
			}

			set
			{
				Helper.Set<AttributeData, AttributeDataInternal>(ref value, ref m_Data);
			}
		}

		public SessionAttributeAdvertisementType AdvertisementType
		{
			get
			{
				return m_AdvertisementType;
			}

			set
			{
				m_AdvertisementType = value;
			}
		}

		public void Set(ref SessionDetailsAttribute other)
		{
			m_ApiVersion = SessionDetails.SessiondetailsAttributeApiLatest;
			Data = other.Data;
			AdvertisementType = other.AdvertisementType;
		}

		public void Set(ref SessionDetailsAttribute? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = SessionDetails.SessiondetailsAttributeApiLatest;
				Data = other.Value.Data;
				AdvertisementType = other.Value.AdvertisementType;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_Data);
		}

		public void Get(out SessionDetailsAttribute output)
		{
			output = new SessionDetailsAttribute();
			output.Set(ref this);
		}
	}
}