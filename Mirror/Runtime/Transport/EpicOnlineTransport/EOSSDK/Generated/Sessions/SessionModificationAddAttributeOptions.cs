// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Sessions
{
	/// <summary>
	/// Input parameters for the <see cref="SessionModification.AddAttribute" /> function.
	/// </summary>
	public struct SessionModificationAddAttributeOptions
	{
		/// <summary>
		/// Key/Value pair describing the attribute to add to the session
		/// </summary>
		public AttributeData? SessionAttribute { get; set; }

		/// <summary>
		/// Is this attribution advertised with the backend or simply stored locally
		/// </summary>
		public SessionAttributeAdvertisementType AdvertisementType { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct SessionModificationAddAttributeOptionsInternal : ISettable<SessionModificationAddAttributeOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_SessionAttribute;
		private SessionAttributeAdvertisementType m_AdvertisementType;

		public AttributeData? SessionAttribute
		{
			set
			{
				Helper.Set<AttributeData, AttributeDataInternal>(ref value, ref m_SessionAttribute);
			}
		}

		public SessionAttributeAdvertisementType AdvertisementType
		{
			set
			{
				m_AdvertisementType = value;
			}
		}

		public void Set(ref SessionModificationAddAttributeOptions other)
		{
			m_ApiVersion = SessionModification.SessionmodificationAddattributeApiLatest;
			SessionAttribute = other.SessionAttribute;
			AdvertisementType = other.AdvertisementType;
		}

		public void Set(ref SessionModificationAddAttributeOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = SessionModification.SessionmodificationAddattributeApiLatest;
				SessionAttribute = other.Value.SessionAttribute;
				AdvertisementType = other.Value.AdvertisementType;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_SessionAttribute);
		}
	}
}