// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Leaderboards
{
	/// <summary>
	/// Contains information about a single stat to query with user scores.
	/// </summary>
	public struct UserScoresQueryStatInfo
	{
		/// <summary>
		/// The name of the stat to query.
		/// </summary>
		public Utf8String StatName { get; set; }

		/// <summary>
		/// Aggregation used to sort the cached user scores.
		/// </summary>
		public LeaderboardAggregation Aggregation { get; set; }

		internal void Set(ref UserScoresQueryStatInfoInternal other)
		{
			StatName = other.StatName;
			Aggregation = other.Aggregation;
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct UserScoresQueryStatInfoInternal : IGettable<UserScoresQueryStatInfo>, ISettable<UserScoresQueryStatInfo>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_StatName;
		private LeaderboardAggregation m_Aggregation;

		public Utf8String StatName
		{
			get
			{
				Utf8String value;
				Helper.Get(m_StatName, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_StatName);
			}
		}

		public LeaderboardAggregation Aggregation
		{
			get
			{
				return m_Aggregation;
			}

			set
			{
				m_Aggregation = value;
			}
		}

		public void Set(ref UserScoresQueryStatInfo other)
		{
			m_ApiVersion = LeaderboardsInterface.UserscoresquerystatinfoApiLatest;
			StatName = other.StatName;
			Aggregation = other.Aggregation;
		}

		public void Set(ref UserScoresQueryStatInfo? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = LeaderboardsInterface.UserscoresquerystatinfoApiLatest;
				StatName = other.Value.StatName;
				Aggregation = other.Value.Aggregation;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_StatName);
		}

		public void Get(out UserScoresQueryStatInfo output)
		{
			output = new UserScoresQueryStatInfo();
			output.Set(ref this);
		}
	}
}