// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Leaderboards
{
	/// <summary>
	/// Input parameters for the <see cref="LeaderboardsInterface.CopyLeaderboardUserScoreByUserId" /> function.
	/// </summary>
	public struct CopyLeaderboardUserScoreByUserIdOptions
	{
		/// <summary>
		/// The Product User ID to look for when copying leaderboard score data from the cache
		/// </summary>
		public ProductUserId UserId { get; set; }

		/// <summary>
		/// The name of the stat that is used to rank this leaderboard
		/// </summary>
		public Utf8String StatName { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct CopyLeaderboardUserScoreByUserIdOptionsInternal : ISettable<CopyLeaderboardUserScoreByUserIdOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_UserId;
		private System.IntPtr m_StatName;

		public ProductUserId UserId
		{
			set
			{
				Helper.Set(value, ref m_UserId);
			}
		}

		public Utf8String StatName
		{
			set
			{
				Helper.Set(value, ref m_StatName);
			}
		}

		public void Set(ref CopyLeaderboardUserScoreByUserIdOptions other)
		{
			m_ApiVersion = LeaderboardsInterface.CopyleaderboarduserscorebyuseridApiLatest;
			UserId = other.UserId;
			StatName = other.StatName;
		}

		public void Set(ref CopyLeaderboardUserScoreByUserIdOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = LeaderboardsInterface.CopyleaderboarduserscorebyuseridApiLatest;
				UserId = other.Value.UserId;
				StatName = other.Value.StatName;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_UserId);
			Helper.Dispose(ref m_StatName);
		}
	}
}