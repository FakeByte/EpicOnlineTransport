// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Leaderboards
{
	/// <summary>
	/// Input parameters for the <see cref="LeaderboardsInterface.CopyLeaderboardRecordByUserId" /> function.
	/// </summary>
	public struct CopyLeaderboardRecordByUserIdOptions
	{
		/// <summary>
		/// Leaderboard data will be copied from the cache if it relates to the user matching this Product User ID
		/// </summary>
		public ProductUserId UserId { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct CopyLeaderboardRecordByUserIdOptionsInternal : ISettable<CopyLeaderboardRecordByUserIdOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_UserId;

		public ProductUserId UserId
		{
			set
			{
				Helper.Set(value, ref m_UserId);
			}
		}

		public void Set(ref CopyLeaderboardRecordByUserIdOptions other)
		{
			m_ApiVersion = LeaderboardsInterface.CopyleaderboardrecordbyuseridApiLatest;
			UserId = other.UserId;
		}

		public void Set(ref CopyLeaderboardRecordByUserIdOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = LeaderboardsInterface.CopyleaderboardrecordbyuseridApiLatest;
				UserId = other.Value.UserId;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_UserId);
		}
	}
}