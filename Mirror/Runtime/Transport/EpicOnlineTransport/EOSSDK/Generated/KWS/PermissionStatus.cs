// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.KWS
{
	public struct PermissionStatus
	{
		/// <summary>
		/// Name of the permission
		/// </summary>
		public Utf8String Name { get; set; }

		/// <summary>
		/// Status of the permission
		/// </summary>
		public KWSPermissionStatus Status { get; set; }

		internal void Set(ref PermissionStatusInternal other)
		{
			Name = other.Name;
			Status = other.Status;
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct PermissionStatusInternal : IGettable<PermissionStatus>, ISettable<PermissionStatus>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_Name;
		private KWSPermissionStatus m_Status;

		public Utf8String Name
		{
			get
			{
				Utf8String value;
				Helper.Get(m_Name, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_Name);
			}
		}

		public KWSPermissionStatus Status
		{
			get
			{
				return m_Status;
			}

			set
			{
				m_Status = value;
			}
		}

		public void Set(ref PermissionStatus other)
		{
			m_ApiVersion = KWSInterface.PermissionstatusApiLatest;
			Name = other.Name;
			Status = other.Status;
		}

		public void Set(ref PermissionStatus? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = KWSInterface.PermissionstatusApiLatest;
				Name = other.Value.Name;
				Status = other.Value.Status;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_Name);
		}

		public void Get(out PermissionStatus output)
		{
			output = new PermissionStatus();
			output.Set(ref this);
		}
	}
}